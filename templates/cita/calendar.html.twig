{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link href='https://cdn.jsdelivr.net/npm/fullcalendar@5/main.min.css' rel='stylesheet' />
    <link rel="stylesheet" href="{{ asset('styles/calendar.css') }}">
{% endblock %}

{% block title %}Calendario{% endblock %}

{% block body %}
<div class="calendar-container">
    <h2>ESCOJA SU CITA:</h2>

<div id='calendar'></div>
<div id="availableTimes"></div>

{#utilizo marcadores de posición FDATE y HTIME que representan la ubicación de la URL donde deben insertarse fecha y hora seleccionadas 
así evito mezclar twig y js, las variables manipuladas por js se manejan solo en ese entorno #}
<script>
    var confirmUrlTemplate = "";
    {% if usuario is defined and usuario is not null %}
    var confirmUrlTemplate = "{{ path('app_cita_confirmar', {
        'especialidadId': especialidadId,
        'medicoId': medicoId,
        'usuarioId': usuario.id,
        'fecha': 'FDATE',
        'hora': 'HTIME'
    }) }}";
    {% endif %}
</script>


<!-- Botón para confirmar la cita, inicialmente oculto -->
<button id="confirmButton" class="btn btn-success" style="display:none;" onclick="confirmCita()">Confirmar cita</button>

</div>

{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@5/main.min.js'></script>
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5/locales/es.js"></script>
<script>

     var selectedDate = null; //defino aquí la variable para asegurar esté disponible en eventos onclick

    document.addEventListener('DOMContentLoaded', function() {
    var especialidadId = '{{ especialidad.id }}';
    var medicoId = '{{ medico.id }}';
    var usuarioId = '{{ usuario.id }}'
    var calendarEl = document.getElementById('calendar');
    var calendar = new FullCalendar.Calendar(calendarEl, {
        locale: 'es', // idioma a español
        firstDay: 1, // lunes primer día de la semana
        hiddenDays: [0, 6], // Oculta domingos y sábados 
        initialView: 'dayGridMonth',
        validRange: {
            start: new Date().toISOString().split('T')[0] // Restringe las fechas anteriores a hoy
        },
        headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek'
            },
            buttonText: {
                today: 'Hoy',
                month: 'Mes',
                week: 'Semana',
                list: 'Agenda'
            },

        dateClick: function(info) {
            selectedDate = info.dateStr;  // actualiza la variable global selectdate

            // Añado un log para verificar la URL de la petición fetch
            console.log(`{{ path('ruta_para_horas_disponibles') }}?fecha=${info.dateStr}&especialidadId=${especialidadId}&medicoId=${medicoId}`);

            fetch(`{{ path('ruta_para_horas_disponibles') }}?fecha=${info.dateStr}&especialidadId=${especialidadId}&medicoId=${medicoId}`)
                .then(response => response.json())
                .then(data => {
                    console.log('Datos recibidos:', data);
                    displayAvailableTimes(data.horas);
                })
                .catch(error => console.error('Error al cargar las horas:', error));
        }
    });
    calendar.render();
});


    function displayAvailableTimes(horas) {
    var timesContainer = document.getElementById('availableTimes');
    timesContainer.innerHTML = ''; // Limpiar horas anteriores

    if (horas && horas.length > 0) {
        horas.forEach(function(hora) {
            var timeButton = document.createElement('button');
            timeButton.innerText = hora;
            timeButton.className = 'btn btn-primary m-1';
            timeButton.type = 'button';
            timeButton.onclick = function() {
                var url = confirmUrlTemplate.replace('FDATE', selectedDate).replace('HTIME', hora);
                window.location.href = url;
            };
            timesContainer.appendChild(timeButton);
        });
    } else {
        timesContainer.innerHTML = '<p>No hay horas disponibles</p>';
    }
}

    function confirmCita() {
        if (selectedDate) {
            
            alert('Fecha seleccionada: ' + selectedDate);
            
        } else {
            alert('Por favor, selecciona una fecha y una hora.');
        }
    }
</script>
{% endblock %}



